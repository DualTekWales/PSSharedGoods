#
# https://community.idera.com/database-tools/powershell/powertips/b/tips/posts/making-error-records-more-readable

function ConvertFrom-ErrorRecord {
    <#
    .SYNOPSIS
    Converts error records into a custom object with selected properties.

    .DESCRIPTION
    This function takes error records as input and converts them into a custom object with selected properties, making error records more readable.

    .PARAMETER ErrorRecord
    The error record(s) to convert. This parameter is mandatory when the input is an error record.

    .PARAMETER Exception
    The special stop exception raised by cmdlets with -ErrorAction Stop. This parameter is mandatory when the input is a stop exception.

    .EXAMPLE
    Get-ChildItem -Path 'C:\NonExistentFolder' -ErrorAction Stop | ConvertFrom-ErrorRecord

    This example will convert the error record generated by attempting to access a non-existent folder into a custom object with properties like Exception message, Reason, Target, Script name, Line number, and Column offset.

    .EXAMPLE
    $error[0] | ConvertFrom-ErrorRecord

    This example will convert the first error record in the $error automatic variable into a custom object with selected properties.

    #>
    param (
        # we receive either a legit error record...
        [Management.Automation.ErrorRecord[]]
        [Parameter(Mandatory,ValueFromPipeline,ParameterSetName='ErrorRecord')]
        $ErrorRecord,

        # ...or a special stop exception which is raised by
        # cmdlets with -ErrorAction Stop
        [Management.Automation.ActionPreferenceStopException[]]
        [Parameter(Mandatory,ValueFromPipeline,ParameterSetName='StopException')]
        $Exception
    )

    process {
        # if we received a stop exception in $Exception,
        # the error record is to be found inside of it
        # in all other cases, $ErrorRecord was received
        # directly
        if ($PSCmdlet.ParameterSetName -eq 'StopException') {
            $ErrorRecord = $Exception.ErrorRecord
        }

        # compose a new object out of the interesting properties
        # found in the error record object
        $ErrorRecord | ForEach-Object {
            [PSCustomObject]@{
                Exception = $_.Exception.Message
                Reason    = $_.CategoryInfo.Reason
                Target    = $_.CategoryInfo.TargetName
                Script    = $_.InvocationInfo.ScriptName
                Line      = $_.InvocationInfo.ScriptLineNumber
                Column    = $_.InvocationInfo.OffsetInLine
            }
        }
    }
}